---
import PostsCreationForm from "@/components/Staff/Posts/edit/Form";
import Layout from "@/layouts/MainLayout.astro";
import data from "@/server/queries";

if (!Astro.params.id) {
	return Astro.rewrite("/404");
}
const post = await data.get.byId.post(Astro.params.id);
if (!post) {
	return Astro.rewrite("/404");
}
const postTemp = await Promise.all(
	post.map(async (post) => {
		const content = JSON.parse(post.content);
		const response = await fetch(post.image);
		const arrayBuffer = await response.arrayBuffer();
		const buffer = Buffer.from(arrayBuffer);
		const dataUrl = `data:${response.headers.get("content-type")};base64,${buffer.toString("base64")}`;
		return {
			id: post.id,
			title: post.title,
			description: post.description,
			author: post.author,
			date: post.date,
			image: dataUrl,
			needsReview: post.needsReview,
			published: post.published,
			category: post.category,
			content: content as {
				type: string;
				content: [];
			},
		};
	}),
);
const postFormatted = postTemp[0];
if (!postFormatted) {
	return Astro.rewrite("/404");
}
const category = await data.get.byId.category(postFormatted.category);

const userData = await Astro.locals.currentUser();

let isAdmin = import.meta.env.DEV;

if (!import.meta.env.DEV) {
	if (userData) {
		if (userData.publicMetadata.isAdmin) {
			isAdmin = true;
		} else {
			isAdmin = false;
		}
	} else {
		return Astro.redirect("/?error=action-not-permitted");
	}
}

void isAdmin;

const categories = await data.get.all.categories();
---

<Layout>
  <div class="content-container flex flex-col sm:flex-row sm:flex-wrap gap-2">
    <PostsCreationForm
      client:only="react"
      categories={categories}
      currentCategory={category[0]}
      post={postFormatted}
    />
  </div>
</Layout>
