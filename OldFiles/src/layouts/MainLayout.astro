---
// MainLayout | This is the main *ASTRO* layout for the site;
// you will likely never need to edit this file
// but if you do, This will be well documented

// Start of imports
import "../styles/globals.css";
import background from "../assets/background.svg";
import Layout from "./Layout";
// import data from '@/server/queries';
// import { types } from '@/lib';
// End of imports

// Get current user data from Clerk
// const userData = await Astro.locals.currentUser();

// check if the user is signed in
// if (userData) {
//   // if the user is signed in, check if they are synced
//   if (!userData.publicMetadata.synced) {
//     // if they are not synced, sync them
//     const userObject: types.authorCreate = {
//       clerkId: userData.id,
//       name: userData.fullName!,
//       admin: false,
//     };
//     await data.post.authors.create(userObject);
//     await fetch(`https://api.clerk.com/v1/users/${userData.id}`, {
//       method: 'PATCH',
//       headers: {
//         'Content-Type': 'application/json',
//         Authorization: `Bearer ${import.meta.env.CLERK_SECRET_KEY}`,
//       },
//       body: JSON.stringify({
//         public_metadata: {
//           synced: true,
//         },
//       }),
//     });
//   }
// }

const isDev = import.meta.env.DEV;
---

{/* Start of Dark-light mode | There is no reason to edit this section */}
<script is:inline>
  const getThemePreference = () => {
    if (typeof localStorage !== 'undefined' && localStorage.getItem('theme')) {
      return localStorage.getItem('theme');
    }
    return window.matchMedia('(prefers-color-scheme: dark)').matches
      ? 'dark'
      : 'light';
  };
  const isDark = getThemePreference() === 'dark';
  document.documentElement.classList[isDark ? 'add' : 'remove']('dark');

  if (typeof localStorage !== 'undefined') {
    const observer = new MutationObserver(() => {
      const isDark = document.documentElement.classList.contains('dark');
      localStorage.setItem('theme', isDark ? 'dark' : 'light');
    });
    observer.observe(document.documentElement, {
      attributes: true,
      attributeFilter: ['class'],
    });
  }
</script>
{/* End of Dark-light mode | There is no reason to edit this section */}

{/* Start of HTML */}
<html lang="en">
  {/* TODO: Move head to a separate component */}
  <head>
    {
      isDev && (
        <script
          is:inline
          crossorigin="anonymous"
          src="//unpkg.com/react-scan/dist/auto.global.js"
        />
      )
    }
    <meta charset="UTF-8" />
    <meta name="viewport" content="width=device-width" />
    <link rel="icon" type="image/png" href="/CheyenneEast.png" />
    <meta name="generator" content={Astro.generator} />
    <title>EHS Thunderbolt</title>
  </head>
  <body class="max-h-svh max-w-svw overflow-hidden">
    {/* background image | DO NOT REMOVE */}
    <img
      src={background.src}
      alt=""
      fetchpriority="high"
      class="fixed top-0 left-0 w-full h-full -z-[1] blur-[100px]"
    />
    <Layout client:only="react">
      {
        /* This component allows the page to be used as a layout, DO NOT REMOVE */
      }
      <slot />
    </Layout>
  </body>
</html>
{/* End of HTML */}

{/* Header arrow styling */}
<style is:global>
  .bg-arrow-right-bottom {
    background-image: url(/boxwithtriangleonrightface.svg);
    background-repeat: no-repeat;
    background-position: right bottom;
  }
</style>
